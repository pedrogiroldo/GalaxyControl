name: Build and Release for Linux

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.0.0)"
        required: true
        default: "0.0.0"
      release_notes:
        description: "Release notes"
        required: false
        default: "Release notes"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build application
        run: bun run build

      - name: List build artifacts
        run: |
          echo "Contents of release directory:"
          ls -la release/ || echo "Release directory not found"
          echo "Contents of current directory:"
          ls -la

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: release/
          retention-days: 30

  create-release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: release/

      - name: List downloaded artifacts
        run: |
          echo "Contents of release directory after download:"
          find release/ -type f -name "*.AppImage" || echo "No AppImage found"
          echo "Complete structure:"
          find release/ -type f

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: GalaxyControl v${{ github.event.inputs.version }}
          body: |
            ## üöÄ GalaxyControl v${{ github.event.inputs.version }}

            ### üì¶ What's in this release:
            ${{ github.event.inputs.release_notes }}

            ### üîß Installation:
            - Download the file `GalaxyControl-Linux-${{ github.event.inputs.version }}.AppImage`
            - Make it executable: `chmod +x GalaxyControl-Linux-${{ github.event.inputs.version }}.AppImage`
            - Run: `./GalaxyControl-Linux-${{ github.event.inputs.version }}.AppImage`

            ### üêß Compatibility:
            - Linux (AppImage)
            - Debian, Ubuntu, Fedora, Arch based distributions, etc.

            ### üìù Notes:
            - This is an Electron application for manage Samsung Galaxy especific settings
            - Requires administrator permissions for some features

            ---
            *Automatically built via GitHub Actions*
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/${{ github.event.inputs.version }}/GalaxyControl-Linux-${{ github.event.inputs.version }}.AppImage
          asset_name: GalaxyControl-Linux-${{ github.event.inputs.version }}.AppImage
          asset_content_type: application/octet-stream
